<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserProductMapper">

<!-- ResultMap -->
<!-- 기본 ProductDTO ResultMap -->
<resultMap type="productDTO" id="productResultMap">
	<id column="product_no" property="no"/>
	<result column="product_name" property="name"/>
	<result column="product_price" property="price"/>
	<result column="product_profile" property="profile"/>
	<result column="product_desc" property="desc"/>
	<result column="product_eval" property="eval"/>
	<result column="product_unit" property="unit"/>
	<result column="producer_no" property="producerNo"/>
	<result column="category_subcategory_no" property="subCategoryNo"/>
</resultMap>


<!-- 기본 ProductCommentDTO ResultMap -->
<resultMap type="productCommentDTO" id="productCommentResultMap">
	<id column="product_comment_no" property="no"/>
	<result column="product_comment_content" property="content"/>
	<result column="product_comment_register_date" property="registerDate"/>
	<result column="member_email" property="email"/>
	<result column="product_comment_parent" property="parent"/>
	<result column="product_no" property="productNo"/>
	
</resultMap>

<!-- 기본 CertificationDTO ResultMap -->
<resultMap type="certificationDTO" id="certificationResultMap">
	<id column="certification_no" property="no"/>
	<result column="certification_image" property="image"/>
	<result column="certification_name" property="name"/>
	<result column="certification_desc" property="desc"/>
</resultMap>

<!-- 기본 ProducerDTO ResultMap -->
<resultMap type="producerDTO" id="producerResultMap">
	<id column="producer_no" property="no"/>
	<result column="producer_name" property="name"/>
	<result column="producer_addr" property="addr"/>
	<result column="producer_phone" property="phone"/>
	<result column="producer_register_date" property="registerDate"/>
	<result column="producer_profile" property="profile"/>
</resultMap>


<!-- shopMenuLoading() 관련 쿼리문 -->

<!-- 인기상품 가져오기 (테스트완료)-->
<select id="getBestProduct" resultType="integer">
select purchase_product.product_no 
from purchase, purchase_product 
where purchase.purchase_no = purchase_product.purchase_no group by purchase_product.product_no order by count(purchase_product.product_no) desc
</select>

<!-- 최근구매내역 가져오기 (테스트완료) -->
<select id="getRecentPurchase" resultType="integer" parameterType="string">
select purchase_product.product_no 
from purchase, purchase_product
where purchase.purchase_no = purchase_product.purchase_no and purchase.purchase_state_no = 2 and purchase.member_email = #{value} order by purchase.purchase_date desc
</select>

<!-- 카테고리 눌렀을 때, 상품 리스트 가져오기 (개별상품) (테스트완료) -->
<select id="getProductByCategory" resultMap="productResultMap" parameterType="integer">
select *
from product
where category_subcategory_no = #{value}
order by product_no desc
</select>

<!-- 상품번호(productNo)로 상품DTO(ProductDTO) 가져오기 (테스트완료)-->
<select id="getProductByProductNo" resultMap="productResultMap" parameterType="integer">
select * from product where product_no = #{value}
</select>

<!-- 상품 상세보기 -->
<!-- productNo를 이용해 ProductCommentDTO 가져오기 (테스트완료)-->
<select id="getProductCommentByProductNo" resultMap="productCommentResultMap" parameterType="integer">
select *
from product_comment
where product_no = #{value}
</select>

<!-- productNo를 이용해 Certification DTO 가져오기 (테스트완료)-->
<select id="getCertificationByProductNo" resultMap="certificationResultMap" parameterType="integer">
select certification.certification_no, certification.certification_image, certification.certification_name, certification.certification_desc
from certification, product_certification
where certification.certification_no = product_certification.certification_no and product_certification.product_no = #{value}
</select>

<!-- productNo를 이용해 Producer DTO 가져오기 (테스트완료)-->
<select id="getProducerByProductNo" resultMap="producerResultMap" parameterType="integer">
select r.producer_no, r.producer_name, r.producer_addr, r.producer_phone, r.producer_register_date, r.producer_profile
from product t join producer r
on t.producer_no = r.producer_no and t.producer_no = #{value} and t.product_no = #{value}
</select>

<!-- 생산자번호(producerNo)로 Producer DTO 가져오기 -->
<select id="getProducerByProducerNo" resultMap="producerResultMap" parameterType="integer">
select * from producer where producer_no = #{value}
</select>

<!-- product의 subcategoryNo로 카테고리이름 String으로 가져오기 -->
<select id="getCategoryName" parameterType="integer" resultType="string">
select '[' || c.category_name || ']' || ' [' || s.category_subcategory_name || ']'
from category c, category_subcategory s
where c.category_no = s.category_no and s.category_subcategory_no = #{value}
</select>


<!-- 장바구니에 상품 담기(상품 상세보기에서 눌렀을 때) -->
<insert id="registerProductToCart" parameterType="cartDTO">
insert into cart values(#{email}, #{productNo}, #{num} )
</insert>
<!-- 장바구니에 상품 담기(상품 리스트에서 바로 눌렀을 때) -->
<insert id="registerProductToCartDirect" parameterType="cartDTO">
insert into cart values(#{email}, #{productNo}, 1)
</insert>


<!-- 패키지 메뉴 눌렀을 때 리스트 가져오기 -->
<select id="getPackageList" resultMap="productResultMap">
select distinct t.product_no, t.product_name, t.product_price, t.product_profile, t.product_eval
from product t, package k
where t.product_no = k.package_no
</select>
<!-- 패키지 상품 상세보기 -->
<select id="getPackageDetail" resultMap="productResultMap">
select distinct t.product_no, t.product_profile, t.product_name, t.product_price, t.product_eval, t.product_desc, t.product_unit
from product t, package k
where t.product_no = k.package_no
</select>
<!-- 패키지 상품 내에있는 개별상품 가져오기 -->
<select id="getPackageInnerProductList" resultMap="productResultMap">
select t.product_no, t.product_profile, t.product_name, t.product_price
from product t, package k
where t.product_no = k.product_no
</select>

<!-- 검색 -->
<select id="search" resultMap="productResultMap" parameterType="string">
select * from product
where product_name like '%' || #{value} || '%' order by product_no 
</select>

<!-- purchase 테이블에 삽입 -->
<insert id="registerPurchase" parameterType="purchaseDTO">
insert into purchase values(purchase_no.nextval, sysdate, #{price}, #{method}, #{discount}, 1, #{email})
</insert>

<!-- purchase_order 테이블에 삽입 -->
<insert id="registerPurchaseOrder" parameterType="purchaseOrderDTO">
insert into purchase_order values(#{purchaseNo}, #{name}, #{addr}, #{detailAddr}, #{postCode}, #{email}, #{phone})
</insert>

<!-- purchase_product 테이블에 삽입 -->
<insert id="registerPurchaseProduct" parameterType="purchaseProductDTO">
insert into purchase_product values(#{purchaseNo}, #{productNo}, #{productNum})
</insert>

<!-- purchase 테이블에서 가장 최근에 추가한 purchase_no 가져오기 -->
<select id="getRecentPurchaseNo" resultType="integer">
select max(purchase_no)
from purchase
</select>

</mapper>